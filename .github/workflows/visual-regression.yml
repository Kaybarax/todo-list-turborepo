name: Visual Regression Testing

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/ui-mobile/**'
      - '.github/workflows/visual-regression.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/ui-mobile/**'
      - '.github/workflows/visual-regression.yml'

jobs:
  chromatic:
    name: Chromatic Visual Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for Chromatic baseline detection

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Storybook
        run: pnpm --filter ui-mobile build-storybook

      - name: Run Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/ui-mobile
          buildScriptName: build-storybook
          storybookBuildDir: storybook-static
          onlyChanged: true
          exitZeroOnChanges: true
          exitOnceUploaded: true
          autoAcceptChanges: main

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: pnpm --filter ui-mobile exec playwright install --with-deps

      - name: Build Storybook
        run: pnpm --filter ui-mobile build-storybook

      - name: Run accessibility tests
        run: pnpm --filter ui-mobile test:a11y

      - name: Upload accessibility report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-report
          path: packages/ui-mobile/accessibility-report/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: pnpm --filter ui-mobile exec playwright install --with-deps

      - name: Build Storybook
        run: pnpm --filter ui-mobile build-storybook

      - name: Run performance tests
        run: pnpm --filter ui-mobile test:performance

      - name: Upload performance report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-report
          path: packages/ui-mobile/performance-report/

  visual-diff:
    name: Visual Diff Screenshots
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ios, android, web]
        theme: [light, dark]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: pnpm --filter ui-mobile exec playwright install --with-deps

      - name: Build Storybook
        run: pnpm --filter ui-mobile build-storybook

      - name: Run visual regression tests
        run: pnpm --filter ui-mobile test:visual --platform=${{ matrix.platform }} --theme=${{ matrix.theme }}
        env:
          PLATFORM: ${{ matrix.platform }}
          THEME: ${{ matrix.theme }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots-${{ matrix.platform }}-${{ matrix.theme }}
          path: packages/ui-mobile/screenshots/

  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [chromatic, accessibility-tests, performance-tests, visual-diff]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Generate combined report
        run: |
          mkdir -p test-reports
          echo "# Visual Regression Test Report" > test-reports/README.md
          echo "" >> test-reports/README.md
          echo "## Test Results" >> test-reports/README.md
          echo "- Chromatic: ${{ needs.chromatic.result }}" >> test-reports/README.md
          echo "- Accessibility: ${{ needs.accessibility-tests.result }}" >> test-reports/README.md
          echo "- Performance: ${{ needs.performance-tests.result }}" >> test-reports/README.md
          echo "- Visual Diff: ${{ needs.visual-diff.result }}" >> test-reports/README.md

      - name: Upload combined report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-reports/
