version: '3.8'

services:
  # Database Services
  mongodb:
    image: mongo:7
    container_name: todo-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: todo-app
    volumes:
      - mongodb_data:/data/db
      - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: todo-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Services (Development)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    container_name: todo-api-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9229:9229"  # Debug port
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/todo-app?authSource=admin
      REDIS_URI: redis://redis:6379
      JWT_SECRET: dev-jwt-secret
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - todo-network
    command: pnpm dev:api

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    container_name: todo-web-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
      WATCHPACK_POLLING: true
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    depends_on:
      - api
    networks:
      - todo-network
    command: pnpm dev:web

  mobile:
    build:
      context: .
      dockerfile: apps/mobile/Dockerfile
      target: development
    container_name: todo-mobile-dev
    restart: unless-stopped
    ports:
      - "8081:8081"  # Metro bundler
      - "19000:19000"  # Expo dev tools
      - "19001:19001"  # Expo dev tools
      - "19002:19002"  # Expo dev tools
    environment:
      NODE_ENV: development
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
    volumes:
      - ./apps/mobile:/app/apps/mobile
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/mobile/node_modules
    networks:
      - todo-network
    command: pnpm dev:mobile

  ingestion:
    build:
      context: .
      dockerfile: apps/ingestion/Dockerfile
      target: development
    container_name: todo-ingestion-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/todo-app?authSource=admin
      REDIS_URI: redis://redis:6379
      API_URL: http://api:3001
    volumes:
      - ./apps/ingestion:/app/apps/ingestion
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/ingestion/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      - todo-network
    command: pnpm dev:ingestion

  # Blockchain Development
  hardhat-node:
    build:
      context: .
      dockerfile: apps/blockchain-smart-contracts/Dockerfile
      target: development
    container_name: todo-hardhat-node
    restart: unless-stopped
    ports:
      - "8545:8545"
    volumes:
      - ./apps/blockchain-smart-contracts:/app/apps/blockchain-smart-contracts
      - /app/node_modules
    networks:
      - todo-network
    command: pnpm dev:contracts

  # Monitoring and Observability
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: todo-jaeger-dev
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger collector gRPC
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    environment:
      COLLECTOR_OTLP_ENABLED: true
      SPAN_STORAGE_TYPE: memory
    networks:
      - todo-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: todo-otel-collector-dev
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - jaeger
    networks:
      - todo-network

  # Development Tools
  mailhog:
    image: mailhog/mailhog:latest
    container_name: todo-mailhog-dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - todo-network

  # Development Container
  devcontainer:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: todo-devcontainer
    restart: unless-stopped
    volumes:
      - .:/workspace:cached
      - /var/run/docker.sock:/var/run/docker-host.sock
      - devcontainer_node_modules:/workspace/node_modules
      - devcontainer_pnpm_store:/home/node/.local/share/pnpm/store
    environment:
      - DOCKER_HOST=unix:///var/run/docker-host.sock
    networks:
      - todo-network
    depends_on:
      - mongodb
      - redis
    command: sleep infinity

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  devcontainer_node_modules:
    driver: local
  devcontainer_pnpm_store:
    driver: local

networks:
  todo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16